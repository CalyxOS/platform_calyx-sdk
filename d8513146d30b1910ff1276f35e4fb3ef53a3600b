{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e74113e3_160d244e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2023-07-06T13:10:05Z",
      "side": 1,
      "message": "Finally an explanation for the issue we were seeing before:\n\nWhen SQLiteOpenHelper calls onUpgrade, it does so [within a transaction of its own](https://cs.android.com/android/platform/superproject/+/android-13.0.0_r54:frameworks/base/core/java/android/database/sqlite/SQLiteOpenHelper.java;l\u003d408-423).\n\nTransactions can be nested, but if any nested transaction fails, the whole outer transaction will be rolled back. (So much for nesting...)\n\nAnd when we were reading a value within a transaction, we were not setting that transaction as successful. So it failed the entire outer upgrade transaction, rolling it back.\n\nHere\u0027s the [doc for beginTransaction](https://cs.android.com/android/platform/superproject/+/android-13.0.0_r54:frameworks/base/core/java/android/database/sqlite/SQLiteDatabase.java;l\u003d626-633):\n```\n     * Begins a transaction in EXCLUSIVE mode.\n     * \u003cp\u003e\n     * Transactions can be nested.\n     * When the outer transaction is ended all of\n     * the work done in that transaction and all of the nested transactions will be committed or\n     * rolled back. The changes will be rolled back if any transaction is ended without being\n     * marked as clean (by calling setTransactionSuccessful). Otherwise they will be committed.\n```",
      "revId": "d8513146d30b1910ff1276f35e4fb3ef53a3600b",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b432379_be08cad5",
        "filename": "packages/LineageSettingsProvider/src/org/lineageos/lineagesettings/LineageDatabaseHelper.java",
        "patchSetId": 1
      },
      "lineNbr": 666,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-07-06T13:49:16Z",
      "side": 1,
      "message": "This does something similar to writeSetting",
      "revId": "d8513146d30b1910ff1276f35e4fb3ef53a3600b",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8adef351_1d413162",
        "filename": "packages/LineageSettingsProvider/src/org/lineageos/lineagesettings/LineageDatabaseHelper.java",
        "patchSetId": 1
      },
      "lineNbr": 734,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2023-07-06T13:04:21Z",
      "side": 1,
      "message": "Add db transactions for writing",
      "revId": "d8513146d30b1910ff1276f35e4fb3ef53a3600b",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be367102_82ab07bd",
        "filename": "packages/LineageSettingsProvider/src/org/lineageos/lineagesettings/LineageDatabaseHelper.java",
        "patchSetId": 1
      },
      "lineNbr": 734,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-07-06T13:49:16Z",
      "side": 1,
      "message": "Should we do that here though or leave it upto the caller",
      "parentUuid": "8adef351_1d413162",
      "revId": "d8513146d30b1910ff1276f35e4fb3ef53a3600b",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1202eb60_0f5491d3",
        "filename": "packages/LineageSettingsProvider/src/org/lineageos/lineagesettings/LineageDatabaseHelper.java",
        "patchSetId": 1
      },
      "lineNbr": 736,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-07-06T13:49:16Z",
      "side": 1,
      "message": "This is fine but what about just having two methods so that it\u0027s clearer.\n\nMinor nit / just semantics anyways.",
      "revId": "d8513146d30b1910ff1276f35e4fb3ef53a3600b",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    }
  ]
}